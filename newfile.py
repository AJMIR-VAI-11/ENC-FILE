import base64
exec(base64.b64decode(b'IyBXUklUVEVOIEJZIE1SLkFKTUlSIAojIEZPTExPVyBNWSBHSVRIVUIgOiBodHRwczovL2dpdGh1Yi5jb20vQUpNSVItVkFJLTExCiMtLS0tLS0tLS0tLS0tIElNUE9SVCAtLS0tLS0tLS0tLS0jCmZyb20gb3MgaW1wb3J0IHN5c3RlbSBhcyBjCmltcG9ydCBtYXJzaGFsCmltcG9ydCBiYXNlNjQKaW1wb3J0IHpsaWIKdHJ5OgogICAgZnJvbSBDeXRob24uQnVpbGQuQnVpbGRFeGVjdXRhYmxlIGltcG9ydCBidWlsZCBhcyBleGVjdXRlCmV4Y2VwdDoKICAgIGMoJ3BpcCBpbnN0YWxsIGN5dGhvbiA+L2Rldi9udWxsJykKI19fX19fX19fX19fX19fX19DT0xPVVJfX19fX19fX19fX19fXyMKQSA9ICdceDFiWzE7OTdtJyAKUiA9ICdceDFiWzM4OzU7MTk2bScKWSA9ICdcMDMzWzE7MzNtJwpHID0gJ1x4MWJbMzg7NTs0OG0nCkIgPSAnXHgxYlszODs1OzhtJwpHMSA9ICdceDFiWzM4OzU7NDZtJwpHMiA9ICdceDFiWzM4OzU7NDdtJwpHMyA9ICdceDFiWzM4OzU7NDhtJwpHNCA9ICdceDFiWzM4OzU7NDltJwpHNSA9ICdceDFiWzM4OzU7NTBtJwpYID0gJ1wzM1sxOzM0bScKWDEgPSAnXHgxYlszODs1OzE0bScKWDIgPSAnXHgxYlszODs1OzEyM20nClgzID0gJ1x4MWJbMzg7NTsxMjJtJwpYNCA9ICdceDFiWzM4OzU7ODZtJwpYNSA9ICdceDFiWzM4OzU7MTIxbScKUyA9ICdceDFiWzE7OTZtJwpNID0gJ1x4MWJbMzg7NTsyMDVtJwojLS0tLS0tLS0tLS0tLS0tLSBMT0dPIC0tLS0tLS0tLS0tIwpsb2dvPScnJ1wwMzNbMTs5MW0KICAgIFwwMzNbMTs5MW3ilpHilojilojilojilojilojilZfilpHilpHilpHilpHilpHilpHilojilojilZfilojilojilojilZfilpHilpHilpHilojilojilojilZfilojilojilZfilojilojilojilojilojilojilZfilpEKICAgIFwwMzNbMTs5MW3ilojilojilZTilZDilZDilojilojilZfilpHilpHilpHilpHilpHilojilojilZHilojilojilojilojilZfilpHilojilojilojilojilZHilojilojilZHilojilojilZTilZDilZDilojilojilZcKICAgIFwwMzNbMTs5MW3ilojilojilojilojilojilojilojilZHilpHilpHilpHilpHilpHilojilojilZHilojilojilZTilojilojilojilojilZTilojilojilZHilojilojilZHilojilojilojilojilojilojilZTilZ0KICAgIFwwMzNbMTs5MW3ilojilojilZTilZDilZDilojilojilZHilojilojilZfilpHilpHilojilojilZHilojilojilZHilZrilojilojilZTilZ3ilojilojilZHilojilojilZHilojilojilZTilZDilZDilojilojilZcKICAgIFwwMzNbMTs5MW3ilojilojilZHilpHilpHilojilojilZHilZrilojilojilojilojilojilZTilZ3ilojilojilZHilpHilZrilZDilZ3ilpHilojilojilZHilojilojilZHilojilojilZHilpHilpHilojilojilZEKICAgIFwwMzNbMTs5MW3ilZrilZDilZ3ilpHilpHilZrilZDilZ3ilpHilZrilZDilZDilZDilZDilZ3ilpHilZrilZDilZ3ilpHilpHilpHilpHilpHilZrilZDilZ3ilZrilZDilZ3ilZrilZDilZ3ilpHilpHilZrilZDilZ0gICAgXDAzM1sxOzkybScnJwojLS0tLS0tLS0tLS0tLS0tIENMRUFSIEZVTkNUSU9OIC0tLS0tLS0tLS0tLS0jCmRlZiBjbGVhcigpOgogICAgYygnY2xlYXInKQogICAgcHJpbnQobG9nbykKICAgIHByaW50KDQwKictJykKICAgIHByaW50KCcgRkIgSUQgICA6IEFqbWlyIEhvc3NhaW4gJykKICAgIHByaW50KCcgR0lUSFVCICA6IEFKTUlSLVZBSS0xMScpCiAgICBwcmludCg0MConLScpCiMtLS0tLS0tLS0tLSBNQUlOIEZVTkNUSU9OIC0tLS0tLS0tLS0tLSMKZGVmIG1haW4oKToKICAgIGNsZWFyKCkKICAgIHByaW50KCcgW0FdIE1BUlNIQUwgRU5DUllQVElPTiAnKQogICAgcHJpbnQoJyBbQl0gQkFTRTY0ICBFTkNSWVBUSU9OICcpCiAgICBwcmludCgnIFtDXSBaTElCICAgIEVOQ1JZUFRJT04gJykKICAgIHByaW50KCcgW0RdIENZVEhPTiAgRVhFQ1VUQUJMRSAnKQogICAgcHJpbnQoJyBbRV0gRVhJVCBURVJNSU5BTCAnKQogICAgcHJpbnQoNDAqJy0nKQogICAgb3B0aW9uPWlucHV0KCcgWz9dIENIT0lDRSBNRU5VIDogJykKICAgIGlmIG9wdGlvbiBpbiBbJ2EnLCdBJ106CiAgICAgICAgbWFyc2hhbF9lbmMoKQogICAgZWxpZiBvcHRpb24gaW4gWydiJywnQiddOgogICAgICAgIGJhc2U2NF9lbmMoKQogICAgZWxpZiBvcHRpb24gaW4gWydjJywnQyddOgogICAgICAgIHpsaWJfZW5jKCkKICAgIGVsaWYgb3B0aW9uIGluIFsnZCcsJ0QnXToKICAgICAgICBjeXRob25fZXhlY3V0YWJsZSgpCiAgICBlbHNlOgogICAgICAgIGV4aXQoJyBUT09MIEVYSVRFRCA6LycpCiMtLS0tLS0tLS0tLSBNQVJTSEFMIEVOQ1JZUFRJT04gLS0tLS0tLS0tLS0tLS0jCmRlZiBtYXJzaGFsX2VuYygpOgogICAgY2xlYXIoKQogICAgZmlsZT1pbnB1dCgnIEVOVEVSIFNPVVJDRSBGSUxFIE5BTUUgOiAnKQogICAgZmlsZXg9aW5wdXQoJyBFTlRFUiBPVVRQVVQgRklMRSBOQU1FIDogJykKICAgIHRyeToKICAgICAgICBmaWxlX29wZW49b3BlbihmaWxlLCdyJykucmVhZCgpCiAgICBleGNlcHQ6CiAgICAgICAgZXhpdCgnIEZJTEUgTk9UIEZPVU5EIEVSUk9SICEhJykKICAgIGNvbXBpbGV4PWNvbXBpbGUoZmlsZV9vcGVuLCdkZycsJ2V4ZWMnKQogICAgZHVtcD1tYXJzaGFsLmR1bXBzKGNvbXBpbGV4KQogICAgcnVuX2NvZGU9ZidpbXBvcnQgbWFyc2hhbCBcbmV4ZWMobWFyc2hhbC5sb2Fkcyh7ZHVtcH0pKScKICAgIG91dF9wdXQ9b3BlbihmaWxleCwndycpCiAgICBvdXRfcHV0LndyaXRlKHJ1bl9jb2RlKQogICAgb3V0X3B1dC5jbG9zZSgpCiAgICBwcmludCg0MConLScpCiAgICBwcmludCgnIFvinJPinJNdIEVOQ1JZUFRJT04gQ09NUExFVEUgOi8gJykKICAgIHByaW50KCcgW+Kck+Kck10gT1VUUFVUIEZJTEUgU0FWRSBBUyA6ICcrZmlsZXgpCiMtLS0tLS0tLS0tIEJBU0U2NCBFTkNSWVBUSU9OIC0tLS0tLS0tLS0tLSMKZGVmIGJhc2U2NF9lbmMoKToKICAgIGNsZWFyKCkKICAgIGlucHV0X2ZpbGU9aW5wdXQoJyBFTlRFUiBTT1VSQ0UgRklMRSBQQVRIIDogJykKICAgIG91dHB1dF9maWxlPWlucHV0KCcgRU5URVIgT1VUUFVUIEZJTEUgUEFUSCA6ICcpCiAgICB0cnk6CiAgICAgICAgZmlsZV9vcGVuPW9wZW4oaW5wdXRfZmlsZSwncicpLnJlYWQoKQogICAgZXhjZXB0OgogICAgICAgIGV4aXQoJyBGSUxFIE5PVCBGT1VORCBFUlJPUiAhIScpCiAgICBjb21waWxlPWJhc2U2NC5iNjRlbmNvZGUoZmlsZV9vcGVuLmVuY29kZSgpKQogICAgcnVuX2NvZGU9ZidpbXBvcnQgYmFzZTY0XG5leGVjKGJhc2U2NC5iNjRkZWNvZGUoe2NvbXBpbGV9KSknCiAgICBvdXRfcHV0PW9wZW4ob3V0cHV0X2ZpbGUsJ3cnKQogICAgb3V0X3B1dC53cml0ZShydW5fY29kZSkKICAgIG91dF9wdXQuY2xvc2UoKQogICAgcHJpbnQoJyBb4pyT4pyTXSBFTkNSWVBUSU9OIENPTVBMRVRFIDovJykKICAgIHByaW50KCcgW+Kck+Kck10gRU5DIEZJTEUgU0FWRSBBUyA6ICcrb3V0cHV0X2ZpbGUpCiMtLS0tLS0tLS0tLS0tLS0tIFpMSUIgRU5DUllQVElPTiAtLS0tLS0tLS0tLS0tLS0tLSMKZGVmIHpsaWJfZW5jKCk6CiAgICBjbGVhcigpCiAgICBzcmM9aW5wdXQoJyBFTlRFUiBTT1VSQ0UgRklMRSBQQVRIIDogJykKICAgIHNhdmVfZmlsZT1pbnB1dCgnIEVOVEVSIE9VVFBVVCBGSUxFIFBBVEggOiAnKQogICAgdHJ5OgogICAgICAgIHNyY19maWxlPW9wZW4oc3JjLCdyJykucmVhZCgpCiAgICBleGNlcHQ6CiAgICAgICAgZXhpdCgnIEZJTEUgTk9UIEZPVU5EICEhJykKICAgIGNvbXBpbGVfemxpYj16bGliLmNvbXByZXNzKHNyY19maWxlLmVuY29kZSgpKQogICAgcnVuX2NvZGU9ZidpbXBvcnQgemxpYlxuZXhlYyh6bGliLmRlY29tcHJlc3Moe2NvbXBpbGVfemxpYn0pLmRlY29kZSgpKScKICAgIG91dF9wdXQ9b3BlbihzYXZlX2ZpbGUsJ3cnKQogICAgb3V0X3B1dC53cml0ZShydW5fY29kZSkKICAgIG91dF9wdXQuY2xvc2UoKQogICAgcHJpbnQoJyBb4pyT4pyTXSBFTkNSWVBUSU9OIENPTVBMRVRFIDovJykKICAgIHByaW50KCcgW+Kck+Kck10gRU5DIEZJTEUgU0FWRSBBUyA6ICcrc2F2ZV9maWxlKQojLS0tLS0tLS0tLS0tLS0tIENZVEhPTiBFWEVDVVRBQkxFIC0tLS0tLS0tLS0tLS0tLS0tIwpkZWYgY3l0aG9uX2V4ZWN1dGFibGUoKToKICAgIGNsZWFyKCkKICAgIGZpbGU9aW5wdXQoJyBFTlRFUiBTT1VSQ0UgRklMRSBQQVRIIDogJykKICAgIHRyeToKICAgICAgICBmaWxleD1vcGVuKGZpbGUsJ3InKS5yZWFkKCkKICAgIGV4Y2VwdDoKICAgICAgICBleGl0KCcgRklMRSBOT1QgRk9VTkQgRVJST1IgOi8nKQogICAgZXJyb3I9ZmlsZXgucmVwbGFjZSgnCScsJyAgICAnKQogICAgc29sdmU9b3BlbihmaWxlLCd3Jykud3JpdGUoZXJyb3IpCiAgICBleGVjdXRlKGZpbGUpCiAgICBjbGVhcigpCiAgICBwcmludCgnIFvinJPinJNdIENZVEhPTiBFWEVDVVRBQkxFIENPTVBMRVRFIDoiKScpCiAgICBzYXZlPWZpbGVbOi0zXQogICAgcHJpbnQoJyBb4pyT4pyTXSBFWEVDVVRBQkxFIEZJTEUgU0FWRSBBUyA6ICcrc2F2ZSkKIy0tLS0tLS0tLS0tLS0tLS0tIEVORCAtLS0tLS0tLS0tLS0tLSMKbWFpbigp'))